CREATE TABLE Planner (
    planner_id number GENERATED BY DEFAULT ON NULL AS IDENTITY,
    username varchar2(50) NOT NULL,
    password varchar2(50) NOT NULL,
    CONSTRAINT pk_Planner PRIMARY KEY (planner_id),
    CONSTRAINT uc_Planner_username UNIQUE (username)
);

CREATE TABLE Plan (
    plan_id number GENERATED BY DEFAULT ON NULL AS IDENTITY,
    plan_name varchar2(100) NOT NULL,
    plan_created_by number(10) NOT NULL,
    description varchar2(4000) NOT NULL,
    CONSTRAINT pk_Plan PRIMARY KEY (plan_id),
    CONSTRAINT fk_Plan_plan_created_by FOREIGN KEY(plan_created_by) REFERENCES Planner (planner_id)
);

-- Visibility: Only visible to own
CREATE TABLE Agent (
    agent_id number GENERATED BY DEFAULT ON NULL AS IDENTITY,
    -- to hash
    username varchar2(50) NOT NULL,
    password varchar2(50) NOT NULL,
    agent_name varchar2(50) NOT NULL,
    -- assume Singapore numbers
    mobile_number number(8) NOT NULL,
    email_address varchar2(50) NOT NULL,
    CONSTRAINT pk_Agent PRIMARY KEY (agent_id),
    CONSTRAINT uc_Agent_username UNIQUE (username)
);

CREATE TABLE Customer (
    customer_id number GENERATED BY DEFAULT ON NULL AS IDENTITY,
    username varchar2(50) NOT NULL,
    -- to hash
    password varchar2(50) NOT NULL,
    customer_name varchar2(50) NOT NULL,
    customer_nric nchar(9) NOT NULL,
    date_of_birth date NOT NULL,
    date_joined date NOT NULL,
    address varchar2(100) NOT NULL,
    monthly_salary number(10, -2) NOT NULL,
    monthly_expenses number(10, -2) NOT NULL,
    mobile_number number(8) NOT NULL,
    email_address varchar2(50) NOT NULL,
    payment_method_id number(10) NULL,
    agent_id number(10) NOT NULL,
    CONSTRAINT pk_Customer PRIMARY KEY (customer_id),
    CONSTRAINT uc_Customer_username UNIQUE (username),
    CONSTRAINT uc_Customer_customer_nric UNIQUE (customer_nric),
    CONSTRAINT fk_Customer_payment_method_id FOREIGN KEY(payment_method_id) REFERENCES Payment (payment_id),
    CONSTRAINT fk_Customer_agent_id FOREIGN KEY(agent_id) REFERENCES Agent (agent_id)
);

-- Payment details of payee for Customer
CREATE TABLE Payment (
    payment_id number GENERATED BY DEFAULT ON NULL AS IDENTITY,
    payee_name varchar2(50) NOT NULL,
    -- assume Singapore numbers
    mobile_number number(8) NOT NULL,
    bank_name varchar2(50) NOT NULL,
    branch_name varchar2(50) NOT NULL,
    account_number number(10) NOT NULL,
    bank_code number(3) NOT NULL,
    CONSTRAINT pk_Payment PRIMARY KEY (payment_id)
);

-- Do not track plan_id, Customer can be paying
-- for more than one plan
-- Premiums paid by Customer
CREATE TABLE Premium (
    premium_id number GENERATED BY DEFAULT ON NULL AS IDENTITY,
    customer_id number(10) NOT NULL,
    payment_date date NOT NULL,
    payment_value_sgd number(10, 2) NOT NULL,
    bank_transaction_id varchar2(100) NOT NULL,
    CONSTRAINT pk_Premium PRIMARY KEY (premium_id),
    CONSTRAINT fk_Premium_customer_id FOREIGN KEY(customer_id) REFERENCES Customer (customer_id)
);

-- If need update, to terminate existing and create new row
CREATE TABLE Purchase (
    purchase_id number GENERATED BY DEFAULT ON NULL AS IDENTITY,
    plan_id number(10) NOT NULL,
    customer_id number(10) NOT NULL,
    -- commissioned Agent
    agent_id number(10) NOT NULL,
    plan_details varchar2(4000) NOT NULL,
    purchase_date date NOT NULL,
    -- assumed fixed, monthly premiums
    purchase_value_sgd number(10, 2) NOT NULL,
    policy_start_date date NOT NULL,
    -- determines if policy in effect
    policy_end_date date NOT NULL,
    CONSTRAINT pk_Purchase PRIMARY KEY (purchase_id),
    CONSTRAINT fk_Purchase_plan_id FOREIGN KEY(plan_id) REFERENCES Plan (plan_id),
    CONSTRAINT fk_Purchase_customer_id FOREIGN KEY(customer_id) REFERENCES Customer (customer_id),
    CONSTRAINT fk_Purchase_agent_id FOREIGN KEY(agent_id) REFERENCES Agent (agent_id)
);

CREATE TABLE Financer (
    financer_id number GENERATED BY DEFAULT ON NULL AS IDENTITY,
    username varchar2(50) NOT NULL,
    password varchar2(50) NOT NULL,
    CONSTRAINT pk_Financer PRIMARY KEY (financer_id),
    CONSTRAINT uc_Financer_username UNIQUE (username)
);

CREATE TABLE Claim (
    claim_id number GENERATED BY DEFAULT ON NULL AS IDENTITY,
    plan_id number(10) NOT NULL,
    claim_submitted_by number(10) NOT NULL,
    claim_submitted_for number(10) NOT NULL,
    claim_value number(10, 2) NOT NULL,
    claim_justification varchar2(100) NOT NULL,
    claim_submitted_date date NOT NULL,
    claim_processed_by number(10) NULL,
    claim_processed_date date NULL,
    claim_processed_comment varchar2(100) NULL,
    claim_approved number(1, 0) NULL,
    claim_disimbursed_date date NULL,
    claim_disimbursed number(1, 0) NULL,
    claim_disimbursed_via number(10) NULL,
    bank_transaction_id varchar2(100) NULL,
    CONSTRAINT pk_Claim PRIMARY KEY (claim_id),
    CONSTRAINT fk_Claim_plan_id FOREIGN KEY(plan_id) REFERENCES Plan (plan_id),
    CONSTRAINT fk_Claim_claim_submitted_by FOREIGN KEY(claim_submitted_by) REFERENCES Agent (agent_id),
    CONSTRAINT fk_Claim_claim_submitted_for FOREIGN KEY(claim_submitted_for) REFERENCES Customer (customer_id),
    CONSTRAINT fk_Claim_claim_processed_by FOREIGN KEY(claim_processed_by) REFERENCES Financer (financer_id),
    CONSTRAINT fk_Claim_claim_disimbursed_via FOREIGN KEY(claim_disimbursed_via) REFERENCES Payment (payment_id)
);
