---- Migration of users from old scripts

DROP USER PROJECT2_TEST_TS;
DROP USER PROJECT2_TEST_S;
DROP USER PROJECT2_TEST_C;
DROP USER PROJECT2_TEST_COMM1;
DROP USER PROJECT2_TEST_COMM2;
DROP USER PROJECT2_TEST_COMM3;
DROP USER PROJECT2_TEST_COMM4;
DROP USER PROJECT2_TEST_OTHER1; -- TODO: Drop this user

BEGIN
SA_USER_ADMIN.DROP_USER_ACCESS (
  policy_name => 'INVENTORY_OLS_POL',
  user_name => 'PROJECT2_TEST_TS');
SA_USER_ADMIN.DROP_USER_ACCESS (
  policy_name => 'INVENTORY_OLS_POL',
  user_name => 'PROJECT2_TEST_S');
SA_USER_ADMIN.DROP_USER_ACCESS (
  policy_name => 'INVENTORY_OLS_POL',
  user_name => 'PROJECT2_TEST_C');
SA_USER_ADMIN.DROP_USER_ACCESS (
  policy_name => 'INVENTORY_OLS_POL',
  user_name => 'PROJECT2_TEST_COMM1');
SA_USER_ADMIN.DROP_USER_ACCESS (
  policy_name => 'INVENTORY_OLS_POL',
  user_name => 'PROJECT2_TEST_COMM2');
SA_USER_ADMIN.DROP_USER_ACCESS (
  policy_name => 'INVENTORY_OLS_POL',
  user_name => 'PROJECT2_TEST_COMM3');
SA_USER_ADMIN.DROP_USER_ACCESS (
  policy_name => 'INVENTORY_OLS_POL',
  user_name => 'PROJECT2_TEST_COMM4');
SA_USER_ADMIN.DROP_USER_ACCESS (
  policy_name => 'INVENTORY_OLS_POL',
  user_name => 'PROJECT2_TEST_OTHER1');
END;
/
SELECT * FROM DBA_SA_USER_LEVELS;

-------------------------------------------------------------------------------
---- New users for scenarios

CREATE USER COMM_1 IDENTIFIED BY myNewPassword DEFAULT TABLESPACE PROJECT2;
GRANT CONNECT TO COMM_1;
CREATE USER CHIEF_COMM IDENTIFIED BY myNewPassword DEFAULT TABLESPACE PROJECT2;
GRANT CONNECT TO CHIEF_COMM;
CREATE USER COMM_4 IDENTIFIED BY myNewPassword DEFAULT TABLESPACE PROJECT2;
GRANT CONNECT TO COMM_4;
CREATE USER HR_1 IDENTIFIED BY myNewPassword DEFAULT TABLESPACE PROJECT2;
GRANT CONNECT TO HR_1;

GRANT SELECT,INSERT,UPDATE,DELETE ON INVENTORY.MISSION TO COMM_1;
GRANT SELECT,INSERT,UPDATE,DELETE ON INVENTORY.VEHICLE TO COMM_1;
GRANT SELECT,INSERT,UPDATE,DELETE ON INVENTORY.ITEM TO COMM_1;
GRANT SELECT,INSERT,UPDATE,DELETE ON INVENTORY.MISSION_VEHICLES TO COMM_1;
GRANT SELECT,INSERT,UPDATE,DELETE ON INVENTORY.MISSION_ITEMS TO COMM_1;

GRANT SELECT,INSERT,UPDATE,DELETE ON INVENTORY.MISSION TO CHIEF_COMM;
GRANT SELECT,INSERT,UPDATE,DELETE ON INVENTORY.VEHICLE TO CHIEF_COMM;
GRANT SELECT,INSERT,UPDATE,DELETE ON INVENTORY.ITEM TO CHIEF_COMM;
GRANT SELECT,INSERT,UPDATE,DELETE ON INVENTORY.MISSION_VEHICLES TO CHIEF_COMM;
GRANT SELECT,INSERT,UPDATE,DELETE ON INVENTORY.MISSION_ITEMS TO CHIEF_COMM;

GRANT SELECT ON INVENTORY.MISSION TO COMM_4;
GRANT SELECT ON INVENTORY.VEHICLE TO COMM_4;
GRANT SELECT ON INVENTORY.ITEM TO COMM_4;
GRANT SELECT ON INVENTORY.MISSION_VEHICLES TO COMM_4;
GRANT SELECT ON INVENTORY.MISSION_ITEMS TO COMM_4

-- HR_1 cannot read any tables!
-- Assume CREATE USER and GRANT CONNECT performed by some SYSTEM user

BEGIN
  SA_USER_ADMIN.SET_LEVELS (
    policy_name => 'INVENTORY_OLS_POL',
    user_name => 'COMM_1',
    max_level => 'S');
  SA_USER_ADMIN.SET_COMPARTMENTS (
    policy_name => 'INVENTORY_OLS_POL',
    user_name => 'COMM_1',
    read_comps => 'C,M,T');
  SA_USER_ADMIN.SET_GROUPS (
    policy_name => 'INVENTORY_OLS_POL',
    user_name => 'COMM_1',
    read_groups => 'D1');
END;
/

BEGIN
  SA_USER_ADMIN.SET_LEVELS (
    policy_name => 'INVENTORY_OLS_POL',
    user_name => 'CHIEF_COMM',
    max_level => 'TS');
  SA_USER_ADMIN.SET_COMPARTMENTS (
    policy_name => 'INVENTORY_OLS_POL',
    user_name => 'CHIEF_COMM',
    read_comps => 'C,M,T');
  SA_USER_ADMIN.SET_GROUPS (
    policy_name => 'INVENTORY_OLS_POL',
    user_name => 'CHIEF_COMM',
    read_groups => 'JOINT');
  SA_USER_ADMIN.SET_USER_PRIVS (
    policy_name => 'INVENTORY_OLS_POL',
    user_name => 'CHIEF_COMM',
    privileges => 'FULL');
END;
/

BEGIN
  SA_USER_ADMIN.SET_LEVELS (
    policy_name => 'INVENTORY_OLS_POL',
    user_name => 'COMM_4',
    max_level => 'TS');
  SA_USER_ADMIN.SET_COMPARTMENTS (
    policy_name => 'INVENTORY_OLS_POL',
    user_name => 'COMM_4',
    read_comps => 'C,M,T');
  SA_USER_ADMIN.SET_GROUPS (
    policy_name => 'INVENTORY_OLS_POL',
    user_name => 'COMM_4',
    read_groups => 'JOINT');
  SA_USER_ADMIN.SET_USER_PRIVS (
    policy_name => 'INVENTORY_OLS_POL',
    user_name => 'COMM_4',
    privileges => 'READ');
END;
/

-- Give HR user privileges to authorize users for OLS
GRANT EXECUTE ON SA_USER_ADMIN TO HR_1; -- to authorize users for OLS
GRANT SELECT ON DBA_SA_USER_LEVELS TO HR_1; -- to see current OLS users
GRANT SELECT ON DBA_SA_USER_COMPARTMENTS TO HR_1; -- to see current OLS user compartments
GRANT SELECT ON DBA_SA_USER_GROUPS TO HR_1; -- to see current OLS user groups
GRANT SELECT ON DBA_SA_USER_PRIVS TO HR_1; -- to see current OLS user privileges

-------------------------------------------------------------------------------
-- SCENARIO 4

---- AS SYSTEM
CREATE USER COMM_5 IDENTIFIED BY myNewPassword DEFAULT TABLESPACE PROJECT2;
GRANT CONNECT TO COMM_5;

---- AS HR_1
BEGIN
  SA_USER_ADMIN.SET_LEVELS (
    policy_name => 'INVENTORY_OLS_POL',
    user_name => 'COMM_5',
    max_level => 'C');
  SA_USER_ADMIN.SET_COMPARTMENTS (
    policy_name => 'INVENTORY_OLS_POL',
    user_name => 'COMM_5',
    read_comps => 'M');
  SA_USER_ADMIN.SET_GROUPS (
    policy_name => 'INVENTORY_OLS_POL',
    user_name => 'COMM_5',
    read_groups => 'D3');
  SA_USER_ADMIN.SET_USER_PRIVS (
    policy_name => 'INVENTORY_OLS_POL',
    user_name => 'COMM_5',
    privileges => '');  -- optional
END;
/

SELECT * FROM DBA_SA_USER_LEVELS;
SELECT * FROM DBA_SA_USER_COMPARTMENTS;
SELECT * FROM DBA_SA_USER_GROUPS;
SELECT * FROM DBA_SA_USER_PRIVS;
